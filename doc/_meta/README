#----------------------------------------------------------------------
# Development setup
# Setting up the development environment after a fresh repository clone
#----------------------------------------------------------------------
cd ~/Code/Rails/NIAHChildcare
cp config/examples/database/database.yml config # Setup the database
cp config/examples/config/config.yml config # Setup the configuration files
cp config/examples/deploy.rb config # Setup the capistrano deployment recipe
cp config/examples/deploy/*.rb config/deploy # Setup deployment stage configuration

# Symbolically link image assets
cd ~/Code/Rails/NIAHChildcare/app/assets
ln -s ~/Dropbox/Needle\ in\ a\ Haystack/Repositories/Images images

# Set up the hosts (/etc/hosts)
127.0.0.1	niahchildcare.dev		www.niahchildcare.dev

# Setup deployment references:
git remote add virtual deploy@rails.vm:/var/Repositories/Git/NIAHChildcare.git
git remote add staging deploy@asher.vps:/var/Repositories/Git/NIAHChildcare.git
git remote add production deploy@gad.vps:/var/Repositories/Git/NIAHChildcare.git




# Tests
#======
# Git
git push virtual
git push staging
git push production




# Update bundled gems
#====================
cd ~/Code/Rails/NIAHChildcare
bundle update
gem cleanup




# Running tests with Guard
#=========================
cd ~/Code/Rails/NIAHChildcare
rake db:drop
rake db:setup
rake db:test:prepare
guard




# Running the Application
#========================
cd ~/Code/Rails/NIAHChildcare
rails server # In one terminal window - to run the application

cd ~/Code/Rails/NIAHChildcare
rake jobs:work # In another terminal window - to run delayed job

cd ~/Code/Rails/NIAHChildcare
rails console # In another terminal window - to manage administrators




# Administration
#===============
# Creating an administrator
# In the Rails console, select the user:
u = User.first
u.admin?

# Promote the user to administrator
u.promote
u.save
u.admin?




# Gem management
#===============
# MAINTAIN GEM BUNDLE
bundle update
gem cleanup

# DELETE ALL INSTALLED GEMS
gem list | cut -d" " -f1 | xargs gem uninstall -aIx




# Continuous Application Deployment
#==================================
# VIRTUAL
cd ~/Code/Rails/NIAHChildcare
git checkout master
git merge dev
git push
git push virtual
cap virtual deploy
git tag "`date +virtual_%Y-%m-%d_%H%M%S`"
git push bitbucket master
git push origin master --tags
git push bitbucket master --tags

# STAGING
cd ~/Code/Rails/NIAHChildcare
git checkout master
git merge dev
git push
git push staging
cap staging deploy
git tag "`date +staging_%m-%d_%H%M%S`"
git push bitbucket master
git push origin master --tags
git push bitbucket master --tags

# PRODUCTION
cd ~/Code/Rails/NIAHChildcare
git checkout master
git merge dev
git push
git push production
cap production deploy
git tag "`date +production_%Y-%m-%d_%H%M%S`"
git push bitbucket master
git push origin master --tags
git push bitbucket master --tags


















#----------------------------------------------------------------------
# Virtual setup
#----------------------------------------------------------------------

# Test SSH access:
ssh deploy@rails.vm
ssh vladimir@rails.vm

# Set up the hosts (/etc/hosts):
ssh vladimir@rails.vm

# Make sure the following line is in /etc/hosts:
127.0.0.1 rails.vm

# Test with:
ping rails.vm

# Check that SSH "loops back" on the virtual machine (host key verification):
# On the local development machine
ssh deploy@rails.vm

# On the virtual machine
ssh deploy@rails.vm

# Or

# If the "loop back" fails:
ssh-keygen
ssh-copy-id deploy@rails.vm


# Set up the Repository folder
ssh vladimir@rails.vm
sudo mkdir -p /var/Repositories/Git
sudo chown deploy:deploy /var/Repositories

# Create the Git repository:
ssh deploy@rails.vm
cd /var/Repositories/Git/
mkdir NIAHChildcare.git
cd NIAHChildcare.git
git init --bare

# Push to the Git repository:
# From the development machine:
cd ~/Code/Rails/NIAHChildcare
git remote add virtual deploy@rails.vm:/var/Repositories/Git/NIAHChildcare.git
git push virtual master # or git push virtual


Set up the Apps folder
ssh vladimir@rails.vm
sudo mkdir -p /var/Apps
sudo chown deploy:deploy /var/Apps


Create the AssetsVault folder
ssh vladimir@rails.vm
sudo mkdir -p /var/AssetsVault
sudo chown deploy:deploy /var/AssetsVault


# Configure nginx
# On the development machine
cd ~/Code/Rails/NIAHChildcare/config/examples/nginx
scp nginx.niahchildcare.virtual.conf vladimir@rails.vm:~/niahchildcare.virtual.conf


# On the virtual machine
# Set up the nginx configuration
ssh vladimir@rails.vm
sudo mv ~/niahchildcare.virtual.conf /etc/nginx/sites-available
sudo ln -nfs /etc/nginx/sites-available/niahchildcare.virtual.conf /etc/nginx/sites-enabled/niahchildcare.virtual


# Generate an SSL certificate and key:
sudo mkdir -p /etc/nginx/ssl
cd /etc/nginx/ssl
sudo mkdir -p NIAHChildcare
cd NIAHChildcare
sudo openssl genrsa -des3 -out niahchildcare.virtual.key 1024

# pass phrase: niahchildcare

sudo openssl req -new -key niahchildcare.virtual.key -out niahchildcare.virtual.csr

# Country Name: US
# Province: Massachusetts
# Locality Name: Newton
# Organisation Name: Needle in a Haystack Special Needs Childcare Agency
# Orgnisational Unit Name: <Blank>
# Common Name: niahchildcare.virtual.
# Email: itsupport@pencilcasestudios.com
# Challenge password: <Blank>
# Optional Company Name: <Blank>

sudo cp niahchildcare.virtual.key niahchildcare.virtual.key.original
sudo openssl rsa -in niahchildcare.virtual.key.original -out niahchildcare.virtual.key

sudo openssl x509 -req -days 365 -in niahchildcare.virtual.csr -signkey niahchildcare.virtual.key -out niahchildcare.virtual.crt


# Test the nginx configuration:
sudo service nginx configtest

# If all is well, load the new nginx configuration:
sudo service nginx reload

# Setup the MariaDB database user:
ssh vladimir@rails.vm
mysql -u root -p
create user 'niahchildcare'@'localhost' identified by 'VirtualNIAHChildcarePassword';
grant all on NIAHChildcare_virtual.* to 'niahchildcare'@'localhost';
grant all on NIAHChildcare_virtual_development.* to 'niahchildcare'@'localhost';
grant all on NIAHChildcare_virtual_test.* to 'niahchildcare'@'localhost';

# Setup the MariaDB database:
mysql -u niahchildcare -p
create database NIAHChildcare_virtual;
create database NIAHChildcare_virtual_development;
create database NIAHChildcare_virtual_test;


# Setup the Monit scripts:
# From the development machine
cd ~/Code/Rails/NIAHChildcare/config/examples/monit
scp delayed_job.niahchildcare.virtual.monitrc vladimir@rails.vm:~
cd ~/Code/Rails/NIAHChildcare

# From the virtual machine
ssh vladimir@rails.vm
sudo mv ~/delayed_job.niahchildcare.virtual.monitrc /etc/monit/conf.d/
sudo service monit syntax


# Setup the YAML configuration files:
# From the development machine
cd ~/Code/Rails/NIAHChildcare/config/examples/config
scp config.virtual.yml deploy@rails.vm:~/config.yml
cd ~/Code/Rails/NIAHChildcare/config/examples/database
scp database.virtual.yml deploy@rails.vm:~/database.yml
cd ~/Code/Rails/NIAHChildcare/
ssh deploy@rails.vm

# From the virtual machine (as the deploy user)
cd
mkdir -p ~/Projects/Configurations/NIAHChildcare/virtual
mv database.yml ~/Projects/Configurations/NIAHChildcare/virtual/
mv config.yml ~/Projects/Configurations/NIAHChildcare/virtual/

# From the development machine
# Capistrano steps for initial deployment
# VIRTUAL MACHINE DEPLOYMENT
cd ~/Code/Rails/NIAHChildcare/
git checkout master
git merge dev
git push
git push virtual # May need to 'git push virtual master'
cap virtual deploy:setup # Update configuration files and create the database after this

# From the virtual machine
# After running cap virtual deploy:setup
ssh deploy@rails.vm
cd ~/Projects/Configurations/NIAHChildcare/virtual
cp *.yml /var/Apps/NIAHChildcare/virtual/shared/config/

cd ~/Code/Rails/NIAHChildcare/
cap virtual deploy:check
cap virtual deploy:update
# Create databases
cap virtual deploy:migrate
cap virtual db:seed
cap virtual deploy:start


# After deploying the app
# From the virtual machine
sudo service monit reload



















#----------------------------------------------------------------------
# Staging setup
#----------------------------------------------------------------------

# Test SSH access:
ssh deploy@asher.vps
ssh silumesii@asher.vps

# Set up the hosts (/etc/hosts):
ssh silumesii@asher.vps

# Make sure the following line is in /etc/hosts:
127.0.0.1 asher.vps

# Test with:
ping asher.vps

# Check that SSH "loops back" on the staging machine (host key verification):
# On the local development machine
ssh deploy@asher.vps

# On the staging machine
ssh deploy@asher.vps

# Or

# If the "loop back" fails:
ssh-keygen
ssh-copy-id deploy@asher.vps


# Set up the Repository folder
ssh silumesii@asher.vps
sudo mkdir -p /var/Repositories/Git
sudo chown deploy:deploy /var/Repositories

# Create the Git repository:
ssh deploy@asher.vps
cd /var/Repositories/Git/
mkdir NIAHChildcare.git
cd NIAHChildcare.git
git init --bare

# Push to the Git repository:
# From the development machine:
cd ~/Code/Rails/NIAHChildcare
git remote add staging deploy@asher.vps:/var/Repositories/Git/NIAHChildcare.git
git push staging master # or git push staging


Set up the Apps folder
ssh silumesii@asher.vps
sudo mkdir -p /var/Apps
sudo chown deploy:deploy /var/Apps


Create the AssetsVault folder
ssh silumesii@asher.vps
sudo mkdir -p /var/AssetsVault
sudo chown deploy:deploy /var/AssetsVault


# Configure nginx
# On the development machine
cd ~/Code/Rails/NIAHChildcare/config/examples/nginx
scp nginx.niahchildcare.clientcase.net.conf silumesii@asher.vps:~/niahchildcare.clientcase.net.conf


# On the staging machine
# Set up the nginx configuration
ssh silumesii@asher.vps
sudo mv ~/niahchildcare.clientcase.net.conf /etc/nginx/sites-available
sudo ln -nfs /etc/nginx/sites-available/niahchildcare.clientcase.net.conf /etc/nginx/sites-enabled/niahchildcare.clientcase.net


# Generate an SSL certificate and key:
sudo mkdir -p /etc/nginx/ssl
cd /etc/nginx/ssl
sudo mkdir -p NIAHChildcare
cd NIAHChildcare
sudo openssl genrsa -des3 -out niahchildcare.clientcase.net.key 1024

# pass phrase: niahchildcare

sudo openssl req -new -key niahchildcare.clientcase.net.key -out niahchildcare.clientcase.net.csr

# Country Name: US
# Province: Massachusetts
# Locality Name: Newton
# Organisation Name: Needle in a Haystack Special Needs Childcare Agency
# Orgnisational Unit Name: <Blank>
# Common Name: niahchildcare.clientcase.net
# Email: itsupport@pencilcasestudios.com
# Challenge password: <Blank>
# Optional Company Name: <Blank>

sudo cp niahchildcare.clientcase.net.key niahchildcare.clientcase.net.key.original
sudo openssl rsa -in niahchildcare.clientcase.net.key.original -out niahchildcare.clientcase.net.key

sudo openssl x509 -req -days 365 -in niahchildcare.clientcase.net.csr -signkey niahchildcare.clientcase.net.key -out niahchildcare.clientcase.net.crt


# Test the nginx configuration:
sudo service nginx configtest

# If all is well, load the new nginx configuration:
sudo service nginx reload

# Setup the MariaDB database user:
ssh silumesii@asher.vps
mysql -u root -p
create user 'niahchildcare'@'localhost' identified by 'StagingNIAHChildcarePassword';
grant all on NIAHChildcare_staging.* to 'niahchildcare'@'localhost';
grant all on NIAHChildcare_staging_development.* to 'niahchildcare'@'localhost';
grant all on NIAHChildcare_staging_test.* to 'niahchildcare'@'localhost';

# Setup the MariaDB database:
mysql -u niahchildcare -p
create database NIAHChildcare_staging;
create database NIAHChildcare_staging_development;
create database NIAHChildcare_staging_test;


# Setup the Monit scripts:
# From the development machine
cd ~/Code/Rails/NIAHChildcare/config/examples/monit
scp delayed_job.niahchildcare.clientcase.net.monitrc silumesii@asher.vps:~
cd ~/Code/Rails/NIAHChildcare

# From the staging machine
ssh silumesii@asher.vps
sudo mv ~/delayed_job.niahchildcare.clientcase.net.monitrc /etc/monit/conf.d/
sudo service monit syntax


# Setup the YAML configuration files:
# From the development machine
cd ~/Code/Rails/NIAHChildcare/config/examples/config
scp config.staging.yml deploy@asher.vps:~/config.yml
cd ~/Code/Rails/NIAHChildcare/config/examples/database
scp database.staging.yml deploy@asher.vps:~/database.yml
cd ~/Code/Rails/NIAHChildcare/
ssh deploy@asher.vps

# From the staging machine (as the deploy user)
cd
mkdir -p ~/Projects/Configurations/NIAHChildcare/staging
mv database.yml ~/Projects/Configurations/NIAHChildcare/staging/
mv config.yml ~/Projects/Configurations/NIAHChildcare/staging/

# From the development machine
# Capistrano steps for initial deployment
# VIRTUAL MACHINE DEPLOYMENT
cd ~/Code/Rails/NIAHChildcare/
git checkout master
git merge dev
git push
git push staging # May need to 'git push staging master'
cap staging deploy:setup # Update configuration files and create the database after this

# From the staging machine
# After running cap staging deploy:setup
ssh deploy@asher.vps
cd ~/Projects/Configurations/NIAHChildcare/staging
cp *.yml /var/Apps/NIAHChildcare/staging/shared/config/

cd ~/Code/Rails/NIAHChildcare/
cap staging deploy:check
cap staging deploy:update
# Create databases
cap staging deploy:migrate
cap staging db:seed
cap staging deploy:start


# After deploying the app
# From the staging machine
sudo service monit reload



















#----------------------------------------------------------------------
# Production setup
#----------------------------------------------------------------------

# Test SSH access:
ssh deploy@gad.vps
ssh silumesii@gad.vps

# Set up the hosts (/etc/hosts):
ssh silumesii@gad.vps

# Make sure the following line is in /etc/hosts:
127.0.0.1 gad.vps

# Test with:
ping gad.vps

# Check that SSH "loops back" on the production machine (host key verification):
# On the local development machine
ssh deploy@gad.vps

# On the production machine
ssh deploy@gad.vps

# Or

# If the "loop back" fails:
ssh-keygen
ssh-copy-id deploy@gad.vps


# Set up the Repository folder
ssh silumesii@gad.vps
sudo mkdir -p /var/Repositories/Git
sudo chown deploy:deploy /var/Repositories

# Create the Git repository:
ssh deploy@gad.vps
cd /var/Repositories/Git/
mkdir NIAHChildcare.git
cd NIAHChildcare.git
git init --bare

# Push to the Git repository:
# From the development machine:
cd ~/Code/Rails/NIAHChildcare
git remote add production deploy@gad.vps:/var/Repositories/Git/NIAHChildcare.git
git push production master # or git push production


Set up the Apps folder
ssh silumesii@gad.vps
sudo mkdir -p /var/Apps
sudo chown deploy:deploy /var/Apps


Create the AssetsVault folder
ssh silumesii@gad.vps
sudo mkdir -p /var/AssetsVault
sudo chown deploy:deploy /var/AssetsVault


# Configure nginx
# On the development machine
cd ~/Code/Rails/NIAHChildcare/config/examples/nginx
scp nginx.niahchildcare.com.conf silumesii@gad.vps:~/niahchildcare.com.conf


# On the production machine
# Set up the nginx configuration
ssh silumesii@gad.vps
sudo mv ~/niahchildcare.com.conf /etc/nginx/sites-available
sudo ln -nfs /etc/nginx/sites-available/niahchildcare.com.conf /etc/nginx/sites-enabled/niahchildcare.clientcase.net


# Generate an SSL certificate and key:
sudo mkdir -p /etc/nginx/ssl
cd /etc/nginx/ssl
sudo mkdir -p NIAHChildcare
cd NIAHChildcare
sudo openssl genrsa -des3 -out niahchildcare.com.key 1024

# pass phrase: niahchildcare

sudo openssl req -new -key niahchildcare.com.key -out niahchildcare.com.csr

# Country Name: US
# Province: Massachusetts
# Locality Name: Newton
# Organisation Name: Needle in a Haystack Special Needs Childcare Agency
# Orgnisational Unit Name: <Blank>
# Common Name: niahchildcare.clientcase.net
# Email: itsupport@pencilcasestudios.com
# Challenge password: <Blank>
# Optional Company Name: <Blank>

sudo cp niahchildcare.com.key niahchildcare.com.key.original
sudo openssl rsa -in niahchildcare.com.key.original -out niahchildcare.com.key

sudo openssl x509 -req -days 365 -in niahchildcare.com.csr -signkey niahchildcare.com.key -out niahchildcare.com.crt


# Test the nginx configuration:
sudo service nginx configtest

# If all is well, load the new nginx configuration:
sudo service nginx reload

# Setup the MariaDB database user:
ssh silumesii@gad.vps
mysql -u root -p
create user 'niahchildcare'@'localhost' identified by 'ProductionNIAHChildcarePassword';
grant all on NIAHChildcare_production.* to 'niahchildcare'@'localhost';
grant all on NIAHChildcare_production_development.* to 'niahchildcare'@'localhost';
grant all on NIAHChildcare_production_test.* to 'niahchildcare'@'localhost';

# Setup the MariaDB database:
mysql -u niahchildcare -p
create database NIAHChildcare_production;
create database NIAHChildcare_production_development;
create database NIAHChildcare_production_test;


# Setup the Monit scripts:
# From the development machine
cd ~/Code/Rails/NIAHChildcare/config/examples/monit
scp delayed_job.niahchildcare.com.monitrc silumesii@gad.vps:~
cd ~/Code/Rails/NIAHChildcare

# From the production machine
ssh silumesii@gad.vps
sudo mv ~/delayed_job.niahchildcare.com.monitrc /etc/monit/conf.d/
sudo service monit syntax


# Setup the YAML configuration files:
# From the development machine
cd ~/Code/Rails/NIAHChildcare/config/examples/config
scp config.production.yml deploy@gad.vps:~/config.yml
cd ~/Code/Rails/NIAHChildcare/config/examples/database
scp database.production.yml deploy@gad.vps:~/database.yml
cd ~/Code/Rails/NIAHChildcare/
ssh deploy@gad.vps

# From the production machine (as the deploy user)
cd
mkdir -p ~/Projects/Configurations/NIAHChildcare/production
mv database.yml ~/Projects/Configurations/NIAHChildcare/production/
mv config.yml ~/Projects/Configurations/NIAHChildcare/production/

# From the development machine
# Capistrano steps for initial deployment
# VIRTUAL MACHINE DEPLOYMENT
cd ~/Code/Rails/NIAHChildcare/
git checkout master
git merge dev
git push
git push production # May need to 'git push production master'
cap production deploy:setup # Update configuration files and create the database after this

# From the production machine
# After running cap production deploy:setup
ssh deploy@gad.vps
cd ~/Projects/Configurations/NIAHChildcare/production
cp *.yml /var/Apps/NIAHChildcare/production/shared/config/

cd ~/Code/Rails/NIAHChildcare/
cap production deploy:check
cap production deploy:update
# Create databases
cap production deploy:migrate
cap production db:seed
cap production deploy:start


# After deploying the app
# From the production machine
sudo service monit reload



















Hints
=====
Git
---
git push origin --delete <branchName>


gzip
----
gzip database.sql


MariaDB
-------
# Database export:
# The EXTENSION can be something like "sql"
mysqldump -u USERNAME -p DATABASE_NAME > ~/OUTPUTFILE.EXTENSION

# Database import:
mysql -u USERNAME -p DATABASE_NAME < BACKUPFILE

# Set or update user password
set password for 'username'@'localhost' = password('cleartext password');


Ruby
----
Working with gemsets:
rvm @global do gem update
rvm @global do gem cleanup


Command-line error messages
---------------------------
Problem:
WARNING:root:could not open file '/etc/apt/sources.list.d/passenger.list'

Solution:
This is a permissions issue. See here:
http://stackoverflow.com/questions/21817116/remove-etc-apt-sources-list-d-passenger-list
Fix with:
sudo chmod go=r /etc/apt/sources.list.d/passenger.list










Links
=====
http://gorails.com/deploy/ubuntu/12.04
http://stackoverflow.com/questions/3031412/how-to-export-a-mysql-database-using-command-prompt
http://webcheatsheet.com/SQL/mysql_backup_restore.php
http://www.modrails.com/documentation/Users%20guide%20Nginx.html (Note the "RVM helper tool" section)
https://dev.mysql.com/doc/refman/5.0/en/set-password.html
https://dev.mysql.com/doc/refman/5.1/en/mysqldump.html
https://rvm.io/gemsets/global
