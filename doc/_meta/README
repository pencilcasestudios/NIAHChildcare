Setting up the application to run the first time
================================================
Local machine setup
-------------------
cd ~/Projects/Rails/NIAHChildcare
cp config/examples/database.yml config # Setup the database
cp config/examples/config.yml config # Setup the configuration files
cp config/examples/deploy.rb config # Setup the capistrano deployment recipe
cp config/examples/deploy/*.rb config/deploy # Setup deployment stage configuration

Set up the hosts (/etc/hosts)
127.0.0.1	niahchildcare.dev		www.niahchildcare.dev

Setup deployment references:
git remote add virtual rails.vm:/var/Repositories/Git/NIAHChildcare.git
git remote add production niahchildcare.com:/var/Repositories/Git/NIAHChildcare.git

Link to externalised assets
cd ~/Projects/Rails/NIAHChildcare/app/assets
ln -nfs ~/Dropbox/Needle\ in\ a\ Haystack/Repositories/Images/ images

Virtual machine setup
---------------------
Test SSH access:
ssh deploy@rails.vm
ssh vladimir@rails.vm

Set up the hosts (/etc/hosts):
127.0.0.1 niahchildcare.virtual 	www.niahchildcare.virtual

Check that SSH "loops back" on the virtual machine (host key verification):
# On the local development machine
ssh deploy@rails.vm

# On the virtual machine
ssh niahchildcare.virtual

Create the Git repository:
ssh deploy@rails.vm
cd /var/Repositories/Git/
mkdir NIAHChildcare.git
cd NIAHChildcare.git
git init --bare
cd ..
chown -R deploy:deployers NIAHChildcare.git/

Push to the Git repository:
# From the development machine:
cd ~/Projects/Rails/NIAHChildcare
git push virtual master

Configure nginx:
ssh vladimir@rails.vm
cd /etc/nginx/conf/sites-available/
# Set up the nginx configuration
cd /etc/nginx/conf/sites-enabled/
sudo ln -s /etc/nginx/conf/sites-available/niahchildcare.virtual.conf niahchildcare.virtual

Generate an SSL certificate and key:
cd /etc/nginx/ssl
sudo mkdir NIAHChildcare
cd NIAHChildcare
sudo openssl genrsa -des3 -out niahchildcare.virtual.key 1024
sudo openssl req -new -key niahchildcare.virtual.key -out niahchildcare.virtual.csr
sudo cp niahchildcare.virtual.key niahchildcare.virtual.key.original
sudo openssl rsa -in niahchildcare.virtual.key.original -out niahchildcare.virtual.key
sudo openssl x509 -req -days 365 -in niahchildcare.virtual.csr -signkey niahchildcare.virtual.key -out niahchildcare.virtual.crt

Test the nginx configuration:
sudo /etc/nginx/sbin/nginx -t

If all is well, load the new nginx configuration:
sudo /etc/init.d/nginx reload

Setup the MySQL database user:
ssh vladimir@rails.vm
mysql -u root -p
create user 'niahchildcare'@'localhost' identified by 'VirtualNIAHChildcarePassword';
grant all on NIAHChildcare_virtual.* to 'niahchildcare'@'localhost';

Setup the MySQL database:
mysql -u niahchildcare -p
create database NIAHChildcare_virtual;

Setup the Monit scripts:
# From the development machine
cd ~/Projects/Rails/NIAHChildcare/config/examples
scp delayed_job.niahchildcare.virtual.monitrc vladimir@rails.vm:~
ssh vladimir@rails.vm

# From the virtual machine
sudo mv delayed_job.niahchildcare.virtual.monitrc /etc/monit/conf.d/
sudo /etc/init.d/monit syntax

Setup the YAML configuration files:
# From the development machine
cd ~/Projects/Rails/NIAHChildcare/config/examples
scp config.virtual.yml deploy@rails.vm:~/config.yml
scp database.virtual.yml deploy@rails.vm:~/database.yml
ssh deploy@rails.vm

# From the virtual machine
mkdir -p ~/Projects/Configurations/NIAHChildcare/virtual
mv database.yml ~/Projects/Configurations/NIAHChildcare/virtual/
mv config.yml ~/Projects/Configurations/NIAHChildcare/virtual/

# After running cap deploy:setup
cd ~/Projects/Configurations/NIAHChildcare/virtual
cp *.yml /var/Apps/NIAHChildcare/virtual/shared/config/






Testing
=======
cd ~/Projects/Rails/NIAHChildcare
bundle update
gem cleanup
rake db:drop
rake db:setup
rake db:test:prepare
bundle exec guard




Gem management
==============
MAINTAIN GEM BUNDLE
bundle update
gem cleanup

DELETE ALL INSTALLED GEMS
gem list | cut -d" " -f1 | xargs gem uninstall -aIx




Application Deployment
======================
# Capistrano steps for initial deployment
# VIRTUAL MACHINE DEPLOYMENT
git checkout master
git merge work
git push
git push virtual				# May need to 'git push virtual master'
cap deploy:setup        # Update configuration files and create the database after this
cap deploy:check
cap deploy:update
cap deploy:migrate
cap db:seed
cap deploy:start

# Capistrano for non-initial deployment
# STAGING DEPLOYMENT
git checkout master
git merge work
git push
git push production
cap deploy

# Capistrano for non-initial deployment
# PRODUCTION DEPLOYMENT
git checkout master
git merge work
git push
git push production
cap production deploy
git tag "`date +published_%Y-%m-%d_%H%M%S`"







Background Images
=================
- Quality 75%




Running the Application
=======================
rails server # In one terminal window - to run the application
rake jobs:work # In another terminal window - to run delayed job































FOR CLEANUP:

# ON THE DEVELOPMENT MACHINE
# STAGING DEPLOYMENT
# git checkout master
# git merge work
# git push production
# cap deploy:setup
# Then update configuration files and create the database

# cap deploy:check
# cap deploy:update
# May require verifying the host key.

# cap deploy:migrate
# cap db:seed
# cap deploy:start
# notify-send "App Deployment complete"


# PRODUCTION DEPLOYMENT
# git checkout master
# git merge work
# git push production
# cap production deploy:setup
# Then update configuration files and create the database

# cap production deploy:check
# cap production deploy:update
# May require verifying the host key

# cap production deploy:migrate
# cap production db:seed
# cap production deploy:start
# git tag "`date +published_%Y-%m-%d_%H%M%S`"
# notify-send "App Deployment complete"


